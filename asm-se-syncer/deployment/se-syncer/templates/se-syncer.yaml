apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: asm-serviceregistry-syncer
    asm-system: 'true'
    istio: asm-serviceregistry-syncer
    provider: asm
  name: asm-serviceregistry-syncer
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: asm-serviceregistry-syncer
      asm-system: 'true'
      istio: asm-serviceregistry-syncer
      provider: asm
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        sidecar.istio.io/inject: 'false'
      labels:
        app: asm-serviceregistry-syncer
        asm-system: 'true'
        istio: asm-serviceregistry-syncer
        provider: asm
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
            - "--meshId={{ .Values.ASMID }}"
            - '--regionId={{ .Values.RegionId }}'
          image: "{{ .Values.SeSyncerImage.Repository }}:{{ .Values.SeSyncerImage.Tag }}"
          imagePullPolicy: Always
          name: asm-se-syncer
          resources:
            limits:
              cpu: "{{ .Values.Resources.Limits.Cpu }}"
              memory: "{{ .Values.Resources.Limits.Memory }}"
            requests:
              cpu: "{{ .Values.Resources.Requests.Cpu }}"
              memory: "{{ .Values.Resources.Requests.Memory }}"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/istio/serviceregistry
              name: asm-service-registry-config
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
      volumes:
        - name: asm-service-registry-config
          secret:
            defaultMode: 420
            optional: true
            secretName: asm-service-registry-config
---
apiVersion: v1
kind: Secret
metadata:
  name: asm-service-registry-config
  namespace: istio-system
  labels:
    apiserver: 'true'
type: Opaque
data:
  AccessKeyID: {{ .Values.AccessKeyId | b64enc | quote }}
  AccessKeySecret: {{ .Values.AccessKeySecret | b64enc | quote }}
  RegistryConfig: {{ .Values.Consul | b64enc | quote }}
---