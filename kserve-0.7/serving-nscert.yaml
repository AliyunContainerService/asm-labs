# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-namespace-wildcard-certs
  labels:
    serving.knative.dev/release: "v0.26.2"
    serving.knative.dev/controller: "true"
    networking.knative.dev/wildcard-certificate-provider: nscert
    app.kubernetes.io/name: networking-ns-cert
    app.kubernetes.io/version: "0.26.2"
    app.kubernetes.io/part-of: knative-serving
rules:
  - apiGroups: [""]
    resources: ["namespaces/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: net-nscert-controller
  namespace: knative-serving
  labels:
    app.kubernetes.io/name: net-nscert-controller
    app.kubernetes.io/version: "0.26.2"
    app.kubernetes.io/part-of: knative-serving
    networking.knative.dev/wildcard-certificate-provider: nscert
    serving.knative.dev/release: "v0.26.2"
spec:
  selector:
    matchLabels:
      app: net-nscert-controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: net-nscert-controller
        app.kubernetes.io/name: net-nscert-controller
        app.kubernetes.io/version: "0.26.2"
        app.kubernetes.io/part-of: knative-serving
        serving.knative.dev/release: "v0.26.2"
    spec:
      # To avoid node becoming SPOF, spread our replicas to different nodes.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: net-nscert-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccountName: controller
      containers:
        - name: controller
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: gcr.io/knative-releases/knative.dev/serving/cmd/networking/nscert@sha256:a941c50f322745fdce8805f78831d05e150b8288924bd7f559703f205f33299e
          resources:
            requests:
              cpu: 30m
              memory: 40Mi
            limits:
              cpu: 300m
              memory: 400Mi
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: net-nscert-controller
    serving.knative.dev/release: "v0.26.2"
    networking.knative.dev/wildcard-certificate-provider: nscert
    app.kubernetes.io/name: net-nscert-controller
    app.kubernetes.io/version: "0.26.2"
    app.kubernetes.io/part-of: knative-serving
  name: net-nscert-controller
  namespace: knative-serving
spec:
  ports:
    # Define metrics and profiling for them to be accessible within service meshes.
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
  selector:
    app: net-nscert-controller

---
